--- Enter TestDictionary01.main()            ... 
--- ======================================== ... 

--- PART 01: Create and print simple dictionary ...

--- Car01: {'brand': 'Honda', 'model': 'Acura', 'miles': 25000, 'new': False, 'year': 2016} ...

--- PART 02: Create and print dictionary containing duplicates (miles) ...

--- Car02: {'brand': 'Honda', 'model': 'Acura', 'miles': 60000, 'new': False, 'year': 2016} ...

--- Access items in Car01 ...

--- Car01: brand --> Honda ...
---      : model --> Acura ...
---      : miles --> 25000 ...
---      : new   --> False ...
---      : year  --> 2016 ...

--- Retrieve keys from Car01 ...

--- Car01 keys: dict_keys(['brand', 'model', 'miles', 'new', 'year']) ...

--- Add new key to Car01 ...

--- Car01 keys: dict_keys(['brand', 'model', 'miles', 'new', 'year', 'color']) ...
--- Car01: color --> white ...

--- Paint car01 new color ...

--- Car01: color --> blue ...

--- Check to see if a key is in dictionary ...

---   Yes, 'model' is one of the keys in car01 dictionary
---   No, 'selfdriving' is not a key in car01 dictionary

--- Update dictionary items ...

--- Car01: {'brand': 'Honda', 'model': 'Acura', 'miles': 100000, 'new': False, 'year': 2016, 'color': 'red'} ...

--- PART 03: Simple calculations with dictionaries ...

{'AAPL': 165.0, 'AMZN': 144.0, 'GOOG': 125.55, 'META': 178.49, 'NVDA': 188.41, 'TWTR': 44.7, 'TSLA': 919.0}

--- Compute min/max stock price ...

--- Min price:  (44.7, 'TWTR')
--- Max price:  (919.0, 'TSLA')

--- Sorted prices ...

     TWTR 44.7
     GOOG 125.55
     AMZN 144.0
     AAPL 165.0
     META 178.49
     NVDA 188.41
     TSLA 919.0

--- PART 04: Create dictionary of word count ...

["We're", 'going', 'to', 'count', 'the', 'number', 'of', 'times', 'a', 'word', 'appears', 'in', 'a', 'list,', 'and', 'put', 'the', 'result', 'in', 'a', 'dictionary']
--- word: We're --> count:  1 ...
--- word: going --> count:  1 ...
--- word: to --> count:  1 ...
--- word: count --> count:  1 ...
--- word: number --> count:  1 ...
--- word: of --> count:  1 ...
--- word: times --> count:  1 ...
--- word: word --> count:  1 ...
--- word: appears --> count:  1 ...
--- word: list, --> count:  1 ...
--- word: and --> count:  1 ...
--- word: put --> count:  1 ...
--- word: result --> count:  1 ...
--- word: dictionary --> count:  1 ...
--- word: the --> count:  2 ...
--- word: in --> count:  2 ...
--- word: a --> count:  3 ...
--- ======================================== ... 
--- Leave TestDictionnary01.main()           ... 
